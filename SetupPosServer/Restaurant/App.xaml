<Application x:Class="Restaurant.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SetupPosServer"
          xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!--#region Fonts-->
            <FontFamily x:Key="BarcodeFont" >IDAHC39M Code 39 Barcode, /POS;component/fonts/#IDAHC39M Code 39 Barcode, Arial</FontFamily>

            <FontFamily x:Key="Font-cairo-light" >cairo light, /POS;component/fonts/cairo-font/#cairo light, Arial</FontFamily>
            <FontFamily x:Key="Font-cairo-bold" >cairo bold , /POS;component/fonts/cairo-font/#cairo bold, Arial</FontFamily>
            <FontFamily x:Key="Font-cairo-regular" >Cairo, /POS;component/fonts/cairo-font/#Cairo Regular 400, Arial</FontFamily>






            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="FontFamily" Value="{StaticResource Font-cairo-regular}"/>
            </Style>
            <!--<Style TargetType="{x:Type materialDesign:Badged}" BasedOn="{StaticResource {x:Type materialDesign:Badged}}">
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="FontSize" Value="8"/>
            </Style>-->



            <!--#region  Badge-->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <SineEase EasingMode="EaseOut" x:Key="BadgeEase" />
            <Storyboard x:Key="BadgeChangedStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
                    <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
                    <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Style TargetType="{x:Type materialDesign:Badged}" >
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="BadgeColorZoneMode" Value="PrimaryLight" />
                <Setter Property="BadgePlacementMode" Value="TopRight" />
                <Setter Property="BadgeChangedStoryboard" Value="{StaticResource BadgeChangedStoryboard}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type materialDesign:Badged}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <Border x:Name="PART_BadgeContainer" 
                                CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding BadgeBackground}"                                 
                                MinWidth="18" MinHeight="18"  
                                MaxWidth="20" MaxHeight="20"  
                                HorizontalAlignment="Left" VerticalAlignment="Top" Padding="2"
                                TextElement.FontSize="9"
                                TextElement.FontWeight="DemiBold"
                                RenderTransformOrigin=".5,.5"
                                Visibility="{TemplateBinding IsBadgeSet, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Border.Resources>
                                        <Style TargetType="materialDesign:PackIcon">
                                            <Setter Property="Width" Value="12" />
                                            <Setter Property="Height" Value="12" />
                                        </Style>
                                    </Border.Resources>
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Border.RenderTransform>
                                    <ContentControl Foreground="{TemplateBinding BadgeForeground}"
                                            IsTabStop="False"
                                            Focusable="False"
                                            HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Margin="1 0 1 0"
                                            Content="{TemplateBinding Badge}" />
                                </Border>
                                <!--FontFamily="Segoe UI"-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="BadgePlacementMode" Value="TopLeft">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="Top">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="TopRight">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="Right">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="BottomRight">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="Bottom">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="BottomLeft">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="Left">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="BadgeColorZoneMode" Value="Standard">
                        <Setter Property="BadgeBackground" Value="{DynamicResource MaterialDesignPaper}" />
                        <Setter Property="BadgeForeground" Value="{DynamicResource MaterialDesignBody}" />
                    </Trigger>
                    <Trigger Property="BadgeColorZoneMode" Value="Inverted">
                        <Setter Property="BadgeBackground" Value="{DynamicResource MaterialDesignBody}" />
                        <Setter Property="BadgeForeground" Value="{DynamicResource MaterialDesignPaper}" />
                    </Trigger>
                    <Trigger Property="BadgeColorZoneMode" Value="PrimaryLight">
                        <Setter Property="BadgeBackground" Value="{DynamicResource PrimaryHueLightBrush}" />
                        <Setter Property="BadgeForeground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
                    </Trigger>
                    <Trigger Property="BadgeColorZoneMode" Value="PrimaryMid">
                        <Setter Property="BadgeBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
                        <Setter Property="BadgeForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                    </Trigger>
                    <Trigger Property="BadgeColorZoneMode" Value="PrimaryDark">
                        <Setter Property="BadgeBackground" Value="{DynamicResource PrimaryHueDarkBrush}" />
                        <Setter Property="BadgeForeground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                    </Trigger>
                    <Trigger Property="BadgeColorZoneMode" Value="SecondaryMid">
                        <Setter Property="BadgeBackground" Value="{DynamicResource SecondaryHueMidBrush}" />
                        <Setter Property="BadgeForeground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                    </Trigger>
                    <Trigger Property="BadgeColorZoneMode" Value="Light">
                        <Setter Property="BadgeBackground" Value="{DynamicResource MaterialDesignLightBackground}" />
                        <Setter Property="BadgeForeground" Value="{DynamicResource MaterialDesignLightForeground}" />
                    </Trigger>
                    <Trigger Property="BadgeColorZoneMode" Value="Dark">
                        <Setter Property="BadgeBackground" Value="{DynamicResource MaterialDesignDarkBackground}" />
                        <Setter Property="BadgeForeground" Value="{DynamicResource MaterialDesignDarkForeground}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--#endregion-->
            <!--#endregion-->

            <Style x:Key="BigButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Height="195" x:Name="grid" Background="#00FFFFFF"  >
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="TXT_Contain">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="21"/>
                                            </DoubleAnimationUsingKeyFrames>-->
                                                <DoubleAnimation Duration="0:0:0.2" To="67.5" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.2" To="67.5" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="#35B5FF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TXT_Contain"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="TXT_Contain">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="22"/>
                                            </DoubleAnimationUsingKeyFrames>-->
                                                <DoubleAnimation Duration="0:0:0.6" To="66" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.6" To="66" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <ColorAnimation Duration="0:0:0.5" To="#66C6FF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TXT_Contain"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1.5*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Rectangle  Grid.RowSpan="3"  Stretch="Fill" 
                       Width="{Binding ActualWidth, ElementName=Grid1}"
                       Height="{Binding ActualHeight, ElementName=Grid1}"
             RadiusY="30" RadiusX="30"
                                           Fill="{TemplateBinding Background}" x:Name="rectangle"
                                            Opacity="1">
                                    <!--StrokeThickness="2">-->
                                    <!--<Rectangle.Stroke>
                                       <LinearGradientBrush EndPoint="0.7,1" StartPoint="0,0">
                                            <GradientStop Color="#00000000" Offset="0.6"/>
                                            <GradientStop Color="#CCC3C3C3" Offset="1"/>    
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>-->
                                    <Rectangle.Effect>
                                        <DropShadowEffect Color="#d7d7d7" BlurRadius="7" Direction="-90" RenderingBias="Quality" ShadowDepth="0.1" />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Path  Margin="5,10"  Fill="#67686D"  Stretch="Fill" 
              HorizontalAlignment="Center"  VerticalAlignment="Bottom" Height="65" Width="65"
                                       x:Name="X"  Data="{Binding}" />
                                <ContentPresenter Margin="5,10"  Grid.Row="1"   HorizontalAlignment="Center" 
               VerticalAlignment="Top"  x:Name="TXT_Contain" TextBlock.FontFamily="{StaticResource Font-cairo-bold}"
                                                  TextBlock.Foreground="#67686D" TextBlock.FontSize="20"    ContentSource="Content"/>

                                <!--<TextBlock Foreground="White" FontSize="16" TextBlock.FontFamily="{StaticResource MyFontFamily}"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10">إضافة شخص</TextBlock>-->
                                <!--<ContentPresenter Grid.Row="1" x:Name="TXT_Contain"  Margin="00" VerticalAlignment="Bottom" HorizontalAlignment="Center" TextBlock.Foreground="White" TextBlock.FontSize="20"    ContentSource="Content"></ContentPresenter>-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="200" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.2" To="200" Storyboard.TargetProperty="Width" />
                                                <DoubleAnimation Duration="0:0:0.5" To="197.5" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.5" To="197.5" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="195" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="195" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SmallButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Height="75" x:Name="grid" Background="#00FFFFFF"  >
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="TXT_Contain">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="21"/>
                                            </DoubleAnimationUsingKeyFrames>-->
                                                <DoubleAnimation Duration="0:0:0.2" To="32.5" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.2" To="32.5" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="#178DD2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TXT_Contain"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="TXT_Contain">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="22"/>
                                            </DoubleAnimationUsingKeyFrames>-->
                                                <DoubleAnimation Duration="0:0:0.6" To="31" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.6" To="31" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <ColorAnimation Duration="0:0:0.5" To="#66C6FF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TXT_Contain"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1.2*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Rectangle  Grid.RowSpan="3"  Stretch="Fill" 
                       Width="{Binding ActualWidth, ElementName=Grid1}"
                       Height="{Binding ActualHeight, ElementName=Grid1}"
             RadiusY="10" RadiusX="10"
                                           Fill="{TemplateBinding Background}" x:Name="rectangle"
                                            Opacity="1">
                                    <!--StrokeThickness="2">-->
                                    <!--<Rectangle.Stroke>
                                       <LinearGradientBrush EndPoint="0.7,1" StartPoint="0,0">
                                            <GradientStop Color="#00000000" Offset="0.6"/>
                                            <GradientStop Color="#CCC3C3C3" Offset="1"/>    
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>-->
                                    <Rectangle.Effect>
                                        <DropShadowEffect Color="#d7d7d7" BlurRadius="7" Direction="-90" RenderingBias="Quality" ShadowDepth="0.1" />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <!--Fill="#67686D"-->
                                <Path  Margin="2.5,2.5"  Fill="{TemplateBinding BorderBrush}"  Stretch="Fill" 
              HorizontalAlignment="Center"  VerticalAlignment="Bottom" Height="30" Width="30"
                                       x:Name="X"  Data="{Binding}" />
                                <ContentPresenter Margin="2.5,5"  Grid.Row="1"   HorizontalAlignment="Center" 
               VerticalAlignment="Top"  x:Name="TXT_Contain" TextBlock.FontFamily="{StaticResource Font-cairo-bold}"
                                                  TextBlock.Foreground="{Binding Fill, ElementName=X}" TextBlock.FontSize="12"    ContentSource="Content"/>

                                <!--<TextBlock Foreground="White" FontSize="16" TextBlock.FontFamily="{StaticResource MyFontFamily}"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10">إضافة شخص</TextBlock>-->
                                <!--<ContentPresenter Grid.Row="1" x:Name="TXT_Contain"  Margin="00" VerticalAlignment="Bottom" HorizontalAlignment="Center" TextBlock.Foreground="White" TextBlock.FontSize="20"    ContentSource="Content"></ContentPresenter>-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="77.5" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.2" To="77.5" Storyboard.TargetProperty="Width" />
                                                <DoubleAnimation Duration="0:0:0.5" To="76" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.5" To="76" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="75" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="75" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SmallButtonCircleRotate" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid" Background="#02FFFFFF">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.6" To="27.5" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.6" To="27.5" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.6" To="#178DD2"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="#9CD0EF"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" RadiusX="15" RadiusY="15" Opacity="1"/>
                                <Path x:Name="X" Margin="0"  Data="{Binding}"
                              Fill="#178DD2" HorizontalAlignment="Center" 
                                      Stretch="Fill" VerticalAlignment="Center" Height="27.5" Width="27.5"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-90"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-360"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <!--<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Height" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Width" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>-->
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <!--<Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="SmallButtonCircleRotate20" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid" Background="#02FFFFFF">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.6" To="20" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.6" To="20" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.6" To="#178DD2"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="#9CD0EF"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" RadiusX="15" RadiusY="15" Opacity="1"/>
                                <Path x:Name="X" Margin="0"  Data="{Binding}"
                              Fill="#178DD2" HorizontalAlignment="Center" 
                                      Stretch="Fill" VerticalAlignment="Center" Height="20" Width="20"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-90"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-360"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <!--<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Height" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Width" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>-->
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <!--<Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            <Style x:Key="ToolTipError" TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="Background" Value="#15FF0000"/>
            </Style>
            <!--<Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding isActive}" Value="0">
                            <Setter Property="Background" Value="#15FF0000" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>-->
            <Style TargetType="DataGridRow">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding isActive}" Value="0">
                        <!--<Setter Property="Background" Value="#A1A1A1" />-->
                        <Setter Property="TextBlock.TextDecorations" Value="Strikethrough " />
                        <!--<Setter Property="TextBlock.Foreground" Value="White" />-->
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="strikethrough">
                <Setter Property="TextBlock.TextDecorations" Value="Strikethrough " />
            </Style>
            <!--#region ScrollBarTrackThumb-->

            <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                                <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag"
                                Value="Horizontal">
                                    <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                    <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
                <Setter Property="Foreground"
            Value="#ADABAB" />
                <Setter Property="Background"
            Value="Transparent" />
                <Setter Property="Width"
            Value="7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                    <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                    <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                Value="false">
                                    <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation"
                                Value="Horizontal">
                                    <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width"
                                Value="Auto" />
                                    <Setter Property="Height"
                                Value="8" />
                                    <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                    <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->


            <!--#region Icon -->
            <Geometry x:Key="StarIconGeometry" >M179.7,357.6c0.8-4.9,1.5-9.2,2.3-13.5c3.6-20.9,7.2-41.8,10.8-62.7c0.3-1.5-0.3-2.5-1.3-3.4
	c-18.1-17.6-36.3-35.3-54.4-52.9c-0.2-0.2-0.3-0.3-0.7-0.8c2.8-0.5,5.4-0.9,8.1-1.3c22.8-3.3,45.6-6.6,68.4-9.9
	c1.6-0.2,2.2-1.1,2.8-2.3c10.9-22.2,21.9-44.4,32.8-66.6c0.3-0.7,0.7-1.4,1.3-2.4c1.4,2.7,2.6,5.1,3.8,7.5
	c10.1,20.5,20.2,41.1,30.3,61.6c0.7,1.3,1.5,1.9,3,2.2c20,2.9,40.1,5.8,60.1,8.7c5.3,0.8,10.6,1.5,15.9,2.3
	c-3.2,3.4-6.3,6.7-9.6,9.9c-12.3,12-24.6,24-36.9,36c-2.8,2.7-5.6,5.5-8.4,8.1c-1,1-1.4,1.9-1.2,3.3c3.8,21.7,7.5,43.4,11.2,65.1
	c0.6,3.5,1.2,7.1,1.9,11.1c-1.1-0.5-1.9-0.8-2.5-1.2c-21.8-11.5-43.7-22.9-65.5-34.5c-1.5-0.8-2.7-0.8-4.3,0
	c-21.8,11.5-43.6,23-65.5,34.5C181.6,356.7,181,357,179.7,357.6z</Geometry>
            <Geometry x:Key="offerLabelEnTopRight" >M288.2,135.6v115.2L36.5,0h116.2L288.2,135.6z</Geometry>
            <Geometry x:Key="offerLabelEnTopRight_Text" >M227.6,127.8l-10.9,10.7l-0.3-0.9l10.9-10.7L227.6,127.8z M231.9,128.7l-0.1,0.9c2.5-1.1,6-2,10.7-2.6h0.4
	l0.2-0.9C239.2,126.5,235.5,127.3,231.9,128.7z M217.4,146.5c-1.5,3.4-2.2,7.4-2.1,11.9l-2.4,0.7L186.4,132l-0.3,1l26.4,27l3.5-0.9
	l0.1-0.7c0-4.2,0.6-7.8,1.8-10.8L217.4,146.5z M266.6,163.8c-3.9,3.8-9.3,4.2-16.1,1l-0.3,0.6c-4.3,9.5-5.7,18.2-4.2,26
	c-4.5-2.6-9.3-4.5-14.4-5.6l0.1,0.9l0.4,0.1c5.3,1.3,10.3,3.3,15,6.1c-0.9-4.1-1.1-8-0.7-11.6c0.7-5.8,2.2-10.8,4.6-15.2
	c6.7,2.9,11.9,2.5,15.7-1.2c2.3-2.3,3.4-5,3.3-8.2C269.3,159.8,268.2,162.2,266.6,163.8z M265.6,162.1c-1.9,1.9-4.3,2.8-7.3,2.7
	c-2.9,0-6-1-9.1-2.9c-2,4.2-3.6,8.7-4.6,13.6c-1.1,4.9-1.4,9-1.1,12.5l-0.5-0.2c-3.2-1.6-6.8-2.9-10.6-3.7l-0.6-0.1l0.7-0.9
	c5.3-7.3,9.3-14,11.9-20.3l0.2-0.3c-1.6-0.6-3.5-1.7-5.7-3.3l-0.2-0.2l-9.2,9l-0.6,8.7l-12.5-12.8l0.3-1l11.5,11.8l0.3-7.3l10-9.7
	l0.6,0.4c2,1.7,3.9,2.9,5.7,3.6c0.1-0.3,0.2-0.5,0.2-0.5l0.5-0.9c0-0.1,0.1-0.2,0.2-0.4c-1.3-0.7-3.5-2.3-6.6-4.8l-0.3-0.2l-11,10.8
	l-0.2,5.7l-10.7-10.9l6.1,0.3l8.3-8.1l-0.2-0.2c-1.1-0.7-2.2-1.4-3.3-1.9l-0.3-0.1l0.3-0.7c1,0.5,1.7,0.8,2.2,1.1l1.6,1l0.2,0.1
	l1.3-1.3c-1-1-2.3-2-4.2-3l-0.4-0.2c0.3-0.2,1-0.6,2.1-1.1c0.1,0,0.6-0.3,1.4-0.7c0.1,0,0.2-0.1,0.3-0.1c0.7,0.8,1.2,1.4,1.6,1.8
	c0.4,0.4,0.9,0.8,1.3,1.2l12.2-11.9c-0.3-1.2-0.7-2.4-1.1-3.5l-0.1-0.3c6.1,1.7,11.3,4.8,15.7,9.3c3.4,3.5,5.5,7.1,6.2,10.9
	C268.8,156.8,268,159.9,265.6,162.1z M262.8,150.4c-0.2-2.6-1.4-4.9-3.5-7.1c-1.7-1.7-3.4-2.8-5.2-3.4l-13.3,13
	c0.5,0.4,1,0.9,1.5,1.2l12.2-11.9c1.2,0.7,2.4,1.6,3.6,2.9c3.1,3.2,4.2,6.4,3.2,9.6c-0.2-2.2-0.6-3.9-1.1-5.2s-1.4-2.6-2.7-3.9
	c-1-1.1-2-1.8-2.9-2.4l-11.7,11.4l0.3,0.2c3.8,2.7,7.1,4.2,9.9,4.5c2.8,0.3,5.2-0.5,7.2-2.3C262.2,155.2,263,153,262.8,150.4z
	 M217.5,98l0.7,6.7L207.7,115c-2.6-2.7-5.6-3.1-9-1.3c2.5,0.2,4.7,1.1,6.3,2.8c0.1,0.1,0.3,0.3,0.5,0.6l-1.2,1.1
	c-1.9-1.5-3.7-2.4-5.4-2.7l-0.2,0.9c1.8,0.4,3.5,1.3,5,2.5l-11,10.8l-6.5-1l27.1,27.7c0-2.9,0.2-5.2,0.7-6.9s1.4-3.6,2.8-5.8
	c-0.4,0.1-0.7,0.2-0.8,0.2l-3.5,0.9c-2.2,0.5-4.2,0.3-6.1-0.6c-1.8-1-4.4-3.1-7.7-6.5l12.1-11.8l5.3,5.4V130l-5.2-5.4L198.2,137
	l-1.5-1.6l13.9-13.6l6.6,6.7l-1,7.2l10.6-10.4l-7.5,1.1l-4.4-4.5l9.4-9.2l0.5,0.5c1.4,1.3,2.4,2.2,2.9,2.7c1.7,1.7,2.8,3,3.1,3.8
	s0.6,2.3,0.9,4.7c0,0.2,0,0.5,0.1,0.9c0.5-2.1,0.5-3.8,0-5.2c-0.6-1.5-1.9-3.2-3.9-5.3c-1.1-1.1-2.4-2.3-3.7-3.4l-10.1,9.8l-1.5-1.6
	l11.4-11.1c1.8,1.6,3.3,3.1,4.5,4.3c2.6,2.7,4.2,4.8,4.6,6.4c0.4,1.6,0.1,3.9-1,6.7c-0.1,0.3-0.3,0.7-0.5,1.2
	c3.6-1.6,7.3-2.6,11-2.9l0.9-0.1L217.5,98z M203.8,101l0.2,0.9c2.9-1.6,6.8-2.6,11.9-2.9v-0.9C211,98.1,207,99.1,203.8,101z
	 M199.5,99l-10.7,10.4l0.2,1l10.8-10.4L199.5,99z M183,96.5l-11.5,11.2l-0.9,7.9l-13.2-13.5l-0.1,1.3l14,14.3l1.1-9.6l10.5-10.3
	l5,5.1v-1.4L183,96.5z M190.2,70l0.1,6.5l-10.4,10.2c-2.7-2.4-5.4-2.9-8.3-1.5l-0.2,0.6c2.4-0.1,4.3,0.6,5.8,2.1
	c0.2,0.2,0.4,0.4,0.7,0.8l-1.2,1.1c-1.5-1.6-3.3-2.4-5.3-2.3l-0.1,1c1.9,0,3.5,0.6,4.7,1.9l-10.6,10.4l-7.1-0.9l11.9,12.1l0.1-6.3
	l12.5-12.2l5.5,5.7v8.2l10.4-10.1l-8,0.1l-3.6-3.7l9.5-9.3c1.1,1,2,1.8,2.7,2.5c2,2,3.2,3.6,3.9,4.8c0.6,1.2,1,2.6,1,4.2
	c1-2.6-0.2-5.5-3.5-8.9c-1.2-1.2-2.3-2.2-3.3-3.2l-0.7-0.7l-10.2,10l-1.5-1.5l11.5-11.3l0.9,0.9l2.3,2.4l1.4,1.4
	c2.5,2.5,3.9,4.6,4.3,6.3c0.4,1.7,0,4.2-1.2,7.5l0.7-0.3c2.4-1,4.2-1.7,5.4-2s3-0.6,5.3-0.9L190.2,70z M176.6,73.1l0.2,0.9
	c2.9-1.6,6.8-2.6,11.9-2.9v-0.9C183.8,70.2,179.8,71.2,176.6,73.1z M155.7,68.5l-11.5,11.3l-0.9,7.9l-13.2-13.5l-0.1,1.3l14,14.3
	l1.1-9.6l10.5-10.4l5,5.1v-1.4L155.7,68.5z M172.1,71l-10.6,10.5l0.2,0.9L172.4,72L172.1,71z M163.2,42.1l0.1,6.5l-10.4,10.2
	c-2.7-2.4-5.4-2.9-8.3-1.5l-0.2,0.6c2.4-0.1,4.3,0.6,5.8,2.1c0.2,0.2,0.4,0.4,0.7,0.8l-1.2,1.1c-1.5-1.6-3.3-2.4-5.3-2.3l-0.1,1
	c1.9,0,3.5,0.6,4.7,1.9l-10.7,10.4l-7.1-0.9l11.6,12.1l0.1-6.3l12.5-12.2l5.5,5.7v8.2l10.4-10.1l-8,0.1l-3.6-3.7l9.5-9.3
	c1.1,1,2,1.8,2.7,2.5c2,2,3.2,3.6,3.9,4.8c0.6,1.2,1,2.6,1,4.2c1-2.6-0.2-5.5-3.5-8.9c-1.2-1.2-2.3-2.2-3.3-3.2l-0.7-0.7l-10.2,10
	l-1.5-1.5l11.6-11.3l0.9,0.9l2.3,2.4l1.4,1.4c2.5,2.5,3.9,4.6,4.3,6.3c0.4,1.7,0,4.2-1.2,7.5l0.7-0.3c2.4-1,4.2-1.7,5.4-2
	c1.2-0.3,3-0.6,5.3-0.9L163.2,42.1z M152.2,32.6l-0.3,0.3c0.9,3.6,0.5,7.2-1,11.1s-4.1,7.6-7.7,11.1c-4.8,4.7-10.1,7.3-15.8,7.7
	c-5.7,0.4-10.6-1.5-14.6-5.6c-3-3.1-4.8-6.4-5.3-9.9l-0.1,0.1c0.4,4.3,2.1,7.8,4.8,10.6c4.3,4.4,9.4,6.3,15.3,5.8s11.5-3.3,16.8-8.5
	c3.6-3.6,6.1-7.3,7.5-11.4C153.2,39.8,153.4,36.1,152.2,32.6z M150.6,37.5C149.9,42.9,147,48,142,53c-4.8,4.7-9.8,7.2-14.9,7.7
	c-5.2,0.4-9.7-1.4-13.6-5.3c-3.1-3.1-4.8-6.9-5.2-11.3c-0.7-6.6,2-12.7,7.8-18.4c5-4.9,10.1-7.5,15.5-7.9c5.3-0.4,10.1,1.5,14.2,5.7
	C149.7,27.5,151.3,32.2,150.6,37.5z M143.6,25.6c-5.4-5.6-13.1-3.6-22.8,6c-9,8.8-10.9,16-5.5,21.5c2.4,2.5,5.5,3.3,9.2,2.3
	s7.9-3.8,12.5-8.3c5.2-5.1,8.2-9.3,9-12.6C146.8,31.1,146,28.1,143.6,25.6z M142.6,27.5c-4.7-4.8-11.7-2.7-20.8,6.2
	c-3.3,3.2-5.5,6-6.7,8.6c-1.3,2.5-1.6,5.2-1.2,8h0.6c-0.6-4.6,2.2-10,8.4-16.1c8.5-8.3,14.9-10.3,19.1-6c1.2,1.3,2.2,3.2,2.9,5.6
	l0.2,0.7C145.6,32,144.7,29.7,142.6,27.5z</Geometry>
            <Geometry x:Key="offerLabelArTopLeft" >M261.5,0.4L0.8,261.6L0.9,141L141.9,0.3L261.5,0.4z</Geometry>
            <Geometry x:Key="offerLabelArTopLeft_Text" >M131.2,60.2l10.7,10.9l-0.9,0.3l-10.7-10.9L131.2,60.2z M132.1,55.9L133,56c-1.1-2.5-2-6-2.6-10.7v-0.4
	l-0.9-0.2C129.9,48.6,130.7,52.3,132.1,55.9z M149.9,70.4c3.4,1.5,7.4,2.2,11.9,2.1l0.7,2.4l-27.1,26.5l1,0.3l27-26.4l-0.9-3.5
	l-0.7-0.1c-4.2,0-7.8-0.6-10.8-1.8L149.9,70.4z M167.2,21.2c3.8,3.9,4.2,9.3,1,16.1l0.6,0.3c9.5,4.3,18.2,5.7,26,4.2
	c-2.6,4.5-4.5,9.3-5.6,14.4l0.9-0.1l0.1-0.4c1.3-5.3,3.3-10.3,6.1-15c-4.1,0.9-8,1.1-11.6,0.7c-5.8-0.7-10.8-2.2-15.2-4.6
	c2.9-6.7,2.5-11.9-1.2-15.7c-2.3-2.3-5-3.4-8.2-3.3C163.2,18.5,165.6,19.6,167.2,21.2z M165.5,22.2c1.9,1.9,2.8,4.3,2.7,7.3
	c0,2.9-1,6-2.9,9.1c4.2,2,8.7,3.6,13.6,4.6c4.9,1.1,9,1.4,12.5,1.1l-0.2,0.5c-1.6,3.2-2.9,6.8-3.7,10.6l-0.1,0.6l-0.9-0.7
	c-7.3-5.3-14-9.3-20.3-11.9l-0.3-0.2c-0.6,1.6-1.7,3.5-3.3,5.7l-0.2,0.2l9,9.2l8.7,0.6l-12.8,12.5l-1-0.3l11.8-11.5l-7.3-0.3
	l-9.7-10l0.4-0.6c1.7-2,2.9-3.9,3.6-5.7c-0.3-0.1-0.5-0.2-0.5-0.2l-0.9-0.5c-0.1,0-0.2-0.1-0.4-0.2c-0.7,1.3-2.3,3.5-4.8,6.6
	l-0.2,0.3l10.8,11l5.7,0.2l-10.9,10.7l0.3-6.1l-8.1-8.3l-0.2,0.2c-0.7,1.1-1.4,2.2-1.9,3.3l-0.1,0.3l-0.7-0.3c0.5-1,0.8-1.7,1.1-2.2
	l1-1.6l0.1-0.2l-1.3-1.3c-1,1-2,2.3-3,4.2l-0.2,0.4c-0.2-0.3-0.6-1-1.1-2.1c0-0.1-0.3-0.6-0.7-1.4c0-0.1-0.1-0.2-0.1-0.3
	c0.8-0.7,1.4-1.2,1.8-1.6c0.4-0.4,0.8-0.9,1.2-1.3l-11.9-12.2c-1.2,0.3-2.4,0.7-3.5,1.1l-0.3,0.1c1.7-6.1,4.8-11.3,9.3-15.7
	c3.5-3.4,7.1-5.5,10.9-6.2C160.2,19,163.3,19.8,165.5,22.2z M153.8,25c-2.6,0.2-4.9,1.4-7.1,3.5c-1.7,1.7-2.8,3.4-3.4,5.2l13,13.3
	c0.4-0.5,0.9-1,1.2-1.5l-11.9-12.2c0.7-1.2,1.6-2.4,2.9-3.6c3.2-3.1,6.4-4.2,9.6-3.2c-2.2,0.2-3.9,0.6-5.2,1.1
	c-1.3,0.5-2.6,1.4-3.9,2.7c-1.1,1-1.8,2-2.4,2.9L158,44.9l0.2-0.3c2.7-3.8,4.2-7.1,4.5-9.9c0.3-2.8-0.5-5.2-2.3-7.2
	C158.6,25.6,156.4,24.8,153.8,25z M101.4,70.3l6.7-0.7l10.3,10.5c-2.7,2.6-3.1,5.6-1.3,9c0.2-2.5,1.1-4.7,2.8-6.3
	c0.1-0.1,0.3-0.3,0.6-0.5l1.1,1.2c-1.5,1.9-2.4,3.7-2.7,5.4l0.9,0.2c0.4-1.8,1.3-3.5,2.5-5l10.8,11l-1,6.5l27.7-27.1
	c-2.9,0-5.2-0.2-6.9-0.7c-1.7-0.5-3.6-1.4-5.8-2.8c0.1,0.4,0.2,0.7,0.2,0.8l0.9,3.5c0.5,2.2,0.3,4.2-0.6,6.1c-1,1.8-3.1,4.4-6.5,7.7
	L129.3,77l5.4-5.3l-1.3,0l-5.4,5.2l12.4,12.7l-1.6,1.5l-13.6-13.9l6.7-6.6l7.2,1L128.7,61l1.1,7.5l-4.5,4.4l-9.2-9.4l0.5-0.5
	c1.3-1.4,2.2-2.4,2.7-2.9c1.7-1.7,3-2.8,3.8-3.1c0.8-0.3,2.3-0.6,4.7-0.9c0.2,0,0.5,0,0.9-0.1c-2.1-0.5-3.8-0.5-5.2,0
	c-1.5,0.6-3.2,1.9-5.3,3.9c-1.1,1.1-2.3,2.4-3.4,3.7l9.8,10.1l-1.6,1.5l-11.1-11.4c1.6-1.8,3.1-3.3,4.3-4.5c2.7-2.6,4.8-4.2,6.4-4.6
	c1.6-0.4,3.9-0.1,6.7,1c0.3,0.1,0.7,0.3,1.2,0.5c-1.6-3.6-2.6-7.3-2.9-11l-0.1-0.9L101.4,70.3z M104.4,84l0.9-0.2
	c-1.6-2.9-2.6-6.8-2.9-11.9l-0.9,0C101.5,76.8,102.5,80.8,104.4,84z M102.4,88.3L112.8,99l1-0.2L103.4,88L102.4,88.3z M99.9,104.8
	l11.2,11.5l7.9,0.9l-13.5,13.2l1.3,0.1l14.3-14l-9.6-1.1l-10.3-10.5l5.1-5l-1.4,0L99.9,104.8z M73.4,97.6l6.5-0.1l10.2,10.4
	c-2.4,2.7-2.9,5.4-1.5,8.3l0.6,0.2c-0.1-2.4,0.6-4.3,2.1-5.8c0.2-0.2,0.4-0.4,0.8-0.7l1.1,1.2c-1.6,1.5-2.4,3.3-2.3,5.3l1,0.1
	c0-1.9,0.6-3.5,1.9-4.7l10.4,10.6l-0.9,7.1l12.1-11.9l-6.3-0.1L96.9,105l5.7-5.5l8.2,0l-10.1-10.4l0.1,8l-3.7,3.6l-9.3-9.5
	c1-1.1,1.8-2,2.5-2.7c2-2,3.6-3.2,4.8-3.9c1.2-0.6,2.6-1,4.2-1c-2.6-1-5.5,0.2-8.9,3.5c-1.2,1.2-2.2,2.3-3.2,3.3l-0.7,0.7l10,10.2
	l-1.5,1.5L83.7,91.3l0.9-0.9l2.4-2.3l1.4-1.4c2.5-2.5,4.6-3.9,6.3-4.3c1.7-0.4,4.2,0,7.5,1.2l-0.3-0.7c-1-2.4-1.7-4.2-2-5.4
	s-0.6-3-0.9-5.3L73.4,97.6z M76.5,111.2l0.9-0.2c-1.6-2.9-2.6-6.8-2.9-11.9l-0.9,0C73.6,104,74.6,108,76.5,111.2z M71.9,132.1
	l11.3,11.5l7.9,0.9l-13.5,13.2l1.3,0.1l14.3-14l-9.6-1.1l-10.4-10.5l5.1-5l-1.4,0L71.9,132.1z M74.4,115.7l10.5,10.6l0.9-0.2
	l-10.4-10.7L74.4,115.7z M45.5,124.6l6.5-0.1l10.2,10.4c-2.4,2.7-2.9,5.4-1.5,8.3l0.6,0.2c-0.1-2.4,0.6-4.3,2.1-5.8
	c0.2-0.2,0.4-0.4,0.8-0.7l1.1,1.2c-1.6,1.5-2.4,3.3-2.3,5.3l1,0.1c0-1.9,0.6-3.5,1.9-4.7l10.4,10.7l-0.9,7.1L87.5,145l-6.3-0.1
	L69,132.4l5.7-5.5l8.2,0l-10.1-10.4l0.1,8l-3.7,3.6l-9.3-9.5c1-1.1,1.8-2,2.5-2.7c2-2,3.6-3.2,4.8-3.9c1.2-0.6,2.6-1,4.2-1
	c-2.6-1-5.5,0.2-8.9,3.5c-1.2,1.2-2.2,2.3-3.2,3.3l-0.7,0.7l10,10.2l-1.5,1.5l-11.3-11.6l0.9-0.9l2.4-2.3l1.4-1.4
	c2.5-2.5,4.6-3.9,6.3-4.3c1.7-0.4,4.2,0,7.5,1.2l-0.3-0.7c-1-2.4-1.7-4.2-2-5.4s-0.6-3-0.9-5.3L45.5,124.6z M36,135.6l0.3,0.3
	c3.6-0.9,7.2-0.5,11.1,1s7.6,4.1,11.1,7.7c4.7,4.8,7.3,10.1,7.7,15.8c0.4,5.7-1.5,10.6-5.6,14.6c-3.1,3-6.4,4.8-9.9,5.3l0.1,0.1
	c4.3-0.4,7.8-2.1,10.6-4.8c4.4-4.3,6.3-9.4,5.8-15.3c-0.5-5.9-3.3-11.5-8.5-16.8c-3.6-3.6-7.3-6.1-11.4-7.5
	C43.2,134.6,39.5,134.4,36,135.6z M40.9,137.2c5.4,0.7,10.5,3.6,15.5,8.6c4.7,4.8,7.2,9.8,7.7,14.9c0.4,5.2-1.4,9.7-5.3,13.6
	c-3.1,3.1-6.9,4.8-11.3,5.2c-6.6,0.7-12.7-2-18.4-7.8c-4.9-5-7.5-10.1-7.9-15.5c-0.4-5.3,1.5-10.1,5.7-14.2
	C30.9,138.1,35.6,136.5,40.9,137.2z M29,144.2c-5.6,5.4-3.6,13.1,6,22.8c8.8,9,16,10.9,21.5,5.5c2.5-2.4,3.3-5.5,2.3-9.2
	c-1-3.7-3.8-7.9-8.3-12.5c-5.1-5.2-9.3-8.2-12.6-9C34.5,141,31.5,141.8,29,144.2z M30.9,145.2c-4.8,4.7-2.7,11.7,6.2,20.8
	c3.2,3.3,6,5.5,8.6,6.7c2.5,1.3,5.2,1.6,8,1.2l0-0.6c-4.6,0.6-10-2.2-16.1-8.4c-8.3-8.5-10.3-14.9-6-19.1c1.3-1.2,3.2-2.2,5.6-2.9
	l0.7-0.2C35.4,142.2,33.1,143.1,30.9,145.2z</Geometry>
            <!--#endregion-->



            <!--#region  Colors-->
            <SolidColorBrush x:Key="MainColorBlue" Color="#178DD2"/>

            <SolidColorBrush x:Key="MainColorOrange" Color="#FFA926"/>
            <SolidColorBrush x:Key="MainColorGrey" Color="#4E4E4E"/>
            <SolidColorBrush x:Key="MainColorlightGrey" Color="#DFDFDF"/>

            <SolidColorBrush x:Key="lightGreen" Color="#E2EFDA"/>
            <SolidColorBrush x:Key="mediumGreen" Color="#008A1C"/>

            <SolidColorBrush x:Key="MainColorRed" Color="#D22A17"/>
            <SolidColorBrush x:Key="mediumRed" Color="#E53D29"/>
            <SolidColorBrush x:Key="lightRed" Color="#FCE4D6"/>

            <SolidColorBrush x:Key="White" Color="#FFFFFF"/>

            <SolidColorBrush x:Key="Orange" Color="#FFA500"/>

            <!--#endregion-->



            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
